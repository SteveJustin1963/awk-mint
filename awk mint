//////////////////

0 a! 0 b!

:S 0 b! ( `Read and split the input into fields` 48 - );

:P b . 1 = ( `Column 1: ` a . ) /E 3 = ( `Column 3: ` a . ) /E;

:Q 2 = ( a + a! ) `Running sum of column 2: ` a .;

:R 3 = ( a 100 > ( `Column 3 greater than 100` . ) ) /E;

:F `Formatted output: ` a .;

:L `Entire line: ` .;

:C S b .;

:M `Choose a command: ` 
`/1` P /N
`/2` Q /N
`/3` R /N
`/4` F /N
`/5` L /N
`/6` C /N
;

M

///////////////////////

0 a!               // Initialize COL1-SUM to 0 (sum of column 2)
0 b!               // Initialize NUM-FIELDS (number of fields)

// Split input string into fields (assuming space-delimited)
:S
    0 b!           // Set number of fields to 0
    (`Read and split the input into fields` 48 - ) // Read each char and split

// Print specific columns (columns 1 and 3)
:P
    b .            // Print number of fields (NF)
    1 = (`Column 1: ` a . ) /E   // If it's column 1, print
    3 = (`Column 3: ` a . ) /E   // If it's column 3, print
;

// Sum values in column 2
:Q
    2 = ( a + a! )                // If it's column 2, add to COL1-SUM
    `Running sum of column 2: ` a . // Print the running sum
;

// Check if column 3 > 100
:R
    3 = ( a 100 > (`Column 3 greater than 100` . ) ) /E
;

// Print formatted output
:F
    `Formatted output: ` a .     // Print formatted column
;

// Print the entire input line
:L
    `Entire line: ` .            // Print the whole line
;

// Count number of fields
:C
    S                            // Call split function
    b .                          // Print number of fields (NF)
;

// Main command prompt
:M
    `Choose a command: ` . 
    `/1` P                       // Call function P (Print specific columns)
    `/2` Q                       // Call function Q (Sum column 2)
    `/3` R                       // Call function R (Check if column 3 > 100)
    `/4` F                       // Call function F (Formatted print)
    `/5` L                       // Call function L (Print line)
    `/6` C                       // Call function C (Count fields)
;

// Start processing
M                                // Run the main function


